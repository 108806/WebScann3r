{
  "SQL Injection": "SQL injection occurs when untrusted data is sent to an interpreter as part of a command or query. The attacker's hostile data can trick the interpreter into executing unintended commands or accessing data without proper authorization.",
  "XSS": "Cross-Site Scripting (XSS) attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted websites. XSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser side script, to a different end user.",
  "Command Injection": "Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application. Command injection attacks are possible when an application passes unsafe user supplied data to a system shell.",
  "File Inclusion": "File inclusion vulnerabilities allow an attacker to include a file, usually exploiting a 'dynamic file inclusion' mechanisms implemented in the target application. The vulnerability occurs due to the use of user-supplied input without proper validation.",
  "Insecure Crypto": "Cryptographic failures refer to weaknesses in encryption, hashing, or other cryptographic implementations. This includes using outdated or weak algorithms, insecure random number generation, or improper key management.",
  "Hardcoded Credentials": "Hardcoded credentials, such as passwords, API keys, and tokens in source code, represent a significant security risk. If discovered, these credentials can be exploited to gain unauthorized access to systems or data.",
  "Information Disclosure": "Information disclosure vulnerabilities expose sensitive information to unauthorized parties. This can include technical details, error messages, debug information, or other data that could be used to exploit the system.",
  "CSRF Vulnerabilities": "Cross-Site Request Forgery (CSRF) attacks force authenticated users to submit unwanted requests to web applications. Without proper protection, attackers can trick users into performing actions they did not intend to perform.",
  "SSRF Vulnerabilities": "Server-Side Request Forgery (SSRF) flaws occur whenever a web application is fetching a remote resource without validating the user-supplied URL. It allows an attacker to coerce the application to send a crafted request to an unexpected destination, even when protected by a firewall or VPN.",
  "XXE Vulnerabilities": "XML External Entity (XXE) attacks target applications that parse XML input. This attack occurs when XML input containing a reference to an external entity is processed by a weakly configured XML parser.",
  "Open Redirect": "Open redirect vulnerabilities occur when a web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This can allow attackers to create links to trusted sites that redirect to malicious sites.",
  "JWT Issues": "JSON Web Token (JWT) vulnerabilities often stem from improper implementation or verification. Issues include weak signing algorithms, token tampering, and missing validation.",
  "Deserialization": "Insecure deserialization vulnerabilities occur when applications deserialize data from untrusted sources without proper validation. This can lead to denial of service, authentication bypasses, or remote code execution.",
  "LDAP Injection": "LDAP injection occurs when untrusted input is used to construct LDAP queries, allowing attackers to modify queries and access unauthorized data.",
  "NoSQL Injection": "NoSQL injection vulnerabilities occur when user input is unsafely included in NoSQL queries, potentially allowing attackers to bypass authentication or extract data.",
  "Insecure Randomness": "Insecure randomness refers to the use of predictable or weak random number generators, which can undermine cryptographic operations and security controls.",
  "Path Traversal": "Path traversal attacks aim to access files and directories that are stored outside the web root folder. By manipulating variables that reference files with 'dot-dot-slash (../)' sequences and variations, an attacker can access arbitrary files on the web server.",
  "Weak JWT Secret": "Weak JWT secrets make it easier for attackers to forge or tamper with tokens, leading to authentication bypass or data exposure.",
  "Software/Library Versions": "Using outdated libraries or software versions can expose the application to known vulnerabilities that have been fixed in newer versions. Regular updates are essential to maintain security.",
  "Directory Listing Enabled": "Directory listing enabled allows attackers to view the contents of directories on the server, potentially exposing sensitive files.",
  "Server-Side Template Injection (SSTI)": "SSTI occurs when user input is unsafely embedded in server-side templates, allowing attackers to execute arbitrary code on the server.",
  "Insecure Configuration": "Security misconfiguration is a common vulnerability that occurs when security controls are improperly configured or missing. This can include insecure default configurations, open cloud storage, verbose error messages, or improper HTTP headers.",
  "Unrestricted File Upload": "Unrestricted file upload vulnerabilities allow attackers to upload malicious files, which can lead to code execution or data compromise.",
  "Unvalidated Redirects": "Unvalidated redirects occur when user input is used to construct URLs for redirection without proper validation, potentially leading to phishing or malware attacks.",
  "CORS Misconfiguration": "CORS misconfiguration can allow unauthorized domains to access resources, leading to data theft or manipulation.",
  "Insecure HTTP Headers": "Insecure HTTP headers can expose applications to various attacks by not enforcing security policies in browsers.",
  "XML Injection": "XML injection occurs when user input is unsafely included in XML documents or queries, potentially allowing data manipulation or disclosure.",
  "Insecure Cookie Flags": "Insecure cookie flags (missing HttpOnly, Secure, or SameSite) can expose cookies to theft or misuse.",
  "Use of Dangerous Functions": "Use of dangerous functions (such as eval, exec, or system) can lead to code injection or execution vulnerabilities.",
  "Race Condition": "Race conditions occur when the outcome of a process depends on the sequence or timing of uncontrollable events, potentially allowing attackers to exploit timing windows for unauthorized actions.",
  "Business Logic Flaw": "Business logic flaws are weaknesses in the intended workflow of an application, allowing attackers to manipulate legitimate functionality for malicious purposes.",
  "Clickjacking": "Clickjacking is an attack that tricks users into clicking on something different from what the user perceives, potentially revealing confidential information or allowing unauthorized actions.",
  "HTTP Parameter Pollution": "HTTP Parameter Pollution occurs when multiple HTTP parameters with the same name are sent in a request, potentially bypassing input validation or causing unexpected application behavior.",
  "Reflected File Download": "Reflected File Download vulnerabilities occur when user input is reflected in downloadable files, potentially allowing attackers to trick users into downloading malicious files.",
  "Log Injection": "Log injection occurs when untrusted user input is written directly to logs, potentially allowing attackers to forge log entries or inject malicious content.",
  "Host Header Injection": "Host header injection occurs when applications use unvalidated Host headers, potentially leading to cache poisoning, password reset poisoning, or web cache deception.",
  "Misconfigured Caching": "Misconfigured caching can expose sensitive data to unauthorized users by improperly storing or serving cached content.",
  "Session Fixation": "Session fixation vulnerabilities allow attackers to set or reuse a valid session ID, potentially hijacking a user session.",
  "Insufficient Logging & Monitoring": "Insufficient logging and monitoring can allow attackers to perform malicious actions without detection, delaying response and remediation.",
  "Sensitive Data Exposure": "Sensitive data exposure occurs when applications do not adequately protect sensitive information such as credentials, credit card numbers, or personal data.",
  "Clickjacking": "Clickjacking is an attack that tricks users into clicking on something different from what the user perceives, potentially revealing confidential information or allowing unauthorized actions.",
  "Host Header Injection": "Host header injection occurs when applications use unvalidated Host headers, potentially leading to cache poisoning, password reset poisoning, or web cache deception."
}
